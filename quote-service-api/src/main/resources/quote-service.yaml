openapi: '3.1.0'
info:
  contact:
    email: adri@jeeistcool.com
    name: Adri
  title: Quote-Service
  description: >-
    A Quote Service to persist weird / inspirational things someone said
  license:
    name: GNU General Public License
    url: https://www.gnu.org/licenses/gpl-3.0.html
  version: '1.0.0'
tags:
  - name: User
    description: All User based Operations
  - name: Quote
    description: All Quote based Operations
  - name: Namespace
    description: All Namespace based Operations
  - name: Session
    description: All Session based Operations
paths:
  /v1/session:
    post:
      operationId: addSession
      description: Login to your Session or create a new one
      tags:
        - Session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '201':
          description: A new Session has been created or the session has been attached successfully
    get:
      operationId: getSession
      description: Get the associated user to this Session
      tags:
        - Session
      responses:
        '404':
          description: No associated Session was found
        '200':
          description: The associated User has been found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
    delete:
      operationId: deleteSession
      description: Delete your current active Session
      tags:
        - Session
      responses:
        '204':
          description: The Session is now gone.
components:
  schemas:
    LoginUser:
      type: object
      description: A User Object that is used to login to the Service. Either the username or email can be null
      required:
        - password
      properties:
        username:
          description: The Username of the specific User
          type: string
          examples:
            - 'tommy4at'
        email:
          description: The Email of the specific User
          type: string
          format: email
          examples:
            - 'Tommy@tommy.com'
        password:
          description: A MD5 hashed representation of the Password
          maxLength: 32
          minLength: 32
          examples:
            - 'D1BF93299DE1B68E6D382C893BF1215F'
          type: string
    GetUser:
      type: object
      description: A User Object containing all the Info about this user
      required:
        - firstName
        - lastName
        - created_at
        - id
      properties:
        firstName:
          type: string
          examples:
            - 'Tommy'
        lastName:
          type: string
          examples:
            - 'Schom'
        alias:
          type: string
          examples:
            - 'TommySchommy'
        created_at:
          type: string
          format: date-time
          examples:
            - '2024-04-28T19:40:01.53072956+02:00'
        id:
          type: string
          maxLength: 16
          minLength: 16
          examples:
            - 'f90d4ac1-bcc8-4760-8ad1-e0d3a447703b'
